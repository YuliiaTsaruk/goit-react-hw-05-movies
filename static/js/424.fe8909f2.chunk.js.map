{"version":3,"file":"static/js/424.fe8909f2.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'components/Api';\n\nexport default function MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchMoviesDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesDetails();\n  }, [movieId]);\n\n  const getPostersUrl = () => {\n    const posterBaseURL = 'https://image.tmdb.org/t/p/w200';\n    const poster = posterBaseURL + movie.poster_path;\n    return poster;\n  };\n\n  return (\n    <div>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops, something went wrong...</p>}\n      {movie && (\n        <div>\n          <img src={getPostersUrl()} alt={movie.title} />\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User Score: {movie.vote_average}</p>\n            <p>\n              <span>Overview</span> {movie.overview}\n            </p>\n            <p>\n              <span>Genres</span>{' '}\n              {movie.genres.map(genre => (\n                <span key={genre.id}>{genre.name} </span>\n              ))}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const backLink = useRef(location);\n\n  return (\n    <div>\n      <Link to={backLink.current.state?.from ?? '/movies'}>Go back</Link>\n\n      <MovieDetails />\n\n      <div>\n        <h3>Additional information:</h3>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["MovieDetails","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","movieId","useParams","useEffect","getMoviesDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMoviesDetails","sent","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id","MovieDetailsPage","_backLink$current$sta","_backLink$current$sta2","location","useLocation","backLink","useRef","Link","to","current","state","from","Outlet"],"sourceRoot":""}