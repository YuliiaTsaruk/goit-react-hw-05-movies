{"version":3,"file":"static/js/591.17febd3c.chunk.js","mappings":"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","sources":["GlobalContainer.styled.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-width: 100vw;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  justify-content: start;\n  margin: 0 auto;\n  padding: 8px;\n`;\n\nexport const Messege = styled.p`\n  margin: 0 auto;\n  font-size: 24px;\n`;\n\nexport const Error = styled.p`\n  margin: 0 auto;\n  font-size: 16px;\n  color: #f34b4b;\n`;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const StyledImg = styled.img`\n  min-width: 300px;\n`;\n\nexport const StyledFilmTitle = styled.h2`\n  margin-bottom: 16px;\n  font-size: 24px;\n`;\n\nexport const StyledInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  margin-left: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const StyledText = styled.p`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 12px;\n`;\n\nexport const StyledTitleText = styled.span`\n  font-weight: 600;\n  margin-bottom: 12px;\n  flex-direction: column;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'components/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container, Error } from 'GlobalContainer.styled';\nimport {\n  StyledContainer,\n  StyledFilmTitle,\n  StyledImg,\n  StyledInfoWrapper,\n  StyledText,\n  StyledTitleText,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchMoviesDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesDetails();\n  }, [movieId]);\n\n  const getPostersUrl = () => {\n    const posterBaseURL = 'https://image.tmdb.org/t/p/w200';\n    const poster = posterBaseURL + movie.poster_path;\n    return poster;\n  };\n\n  const convertToPercentage = score => {\n    return (score * 10).toFixed(2) + '%';\n  };\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error && <Error>Oops, something went wrong...</Error>}\n      {movie && (\n        <StyledContainer>\n          {movie.poster_path ? (\n            <StyledImg\n              src={getPostersUrl(movie.poster_path)}\n              alt={movie.title}\n            />\n          ) : (\n            <StyledImg\n              src=\"https://via.placeholder.com/200\"\n              alt=\"placeholder\"\n            />\n          )}\n          <StyledInfoWrapper>\n            <StyledFilmTitle>{movie.title}</StyledFilmTitle>\n            <StyledText>\n              User Score: {convertToPercentage(movie.vote_average)}\n            </StyledText>\n            <StyledText>\n              <StyledTitleText>Overview</StyledTitleText> {movie.overview}\n            </StyledText>\n            <StyledText>\n              <StyledTitleText>Genres</StyledTitleText>\n              <span>\n                {movie.genres.map(genre => (\n                  <span key={genre.id}> {genre.name} </span>\n                ))}\n              </span>\n            </StyledText>\n          </StyledInfoWrapper>\n        </StyledContainer>\n      )}\n    </Container>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 16px;\n  padding: 8px;\n  width: 100px;\n  text-align: center;\n  color: black;\n  border: 1px solid #d6d6d6;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledLinkItem = styled(Link)`\n  font-size: 18px;\n  padding: 4px;\n  margin-bottom: 4px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const StyledList = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledTitle = styled.h3`\n  margin-bottom: 16px;\n  font-size: 20px;\n`;\n","import { useRef } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\n\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { Container } from 'GlobalContainer.styled';\nimport {\n  StyledLink,\n  StyledLinkItem,\n  StyledList,\n  StyledTitle,\n} from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const backLink = useRef(location);\n\n  return (\n    <Container>\n      <StyledLink to={backLink.current.state?.from ?? '/movies'}>\n        Go back\n      </StyledLink>\n\n      <MovieDetails />\n\n      <div>\n        <StyledTitle>Additional information:</StyledTitle>\n        <StyledList>\n          <li>\n            <StyledLinkItem to={'cast'}>Cast</StyledLinkItem>\n          </li>\n          <li>\n            <StyledLinkItem to={'reviews'}>Reviews</StyledLinkItem>\n          </li>\n        </StyledList>\n      </div>\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Messege","_templateObject2","Error","_templateObject3","StyledContainer","StyledImg","StyledFilmTitle","StyledInfoWrapper","_templateObject4","StyledText","_templateObject5","StyledTitleText","_templateObject6","MovieDetails","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","movieId","useParams","useEffect","getMoviesDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMoviesDetails","sent","t0","finish","stop","apply","arguments","score","_jsxs","children","_jsx","Loader","poster_path","src","alt","title","vote_average","toFixed","overview","genres","map","genre","name","id","StyledLink","Link","StyledLinkItem","StyledList","StyledTitle","MovieDetailsPage","_backLink$current$sta","_backLink$current$sta2","location","useLocation","backLink","useRef","to","current","state","from","Outlet"],"sourceRoot":""}