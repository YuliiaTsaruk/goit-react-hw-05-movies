{"version":3,"file":"static/js/983.55e129ae.chunk.js","mappings":"uQAKe,SAASA,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4CT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OAAnBrB,GAAa,GAAMmB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,MAAsB,KAAD,EAAAL,EAAAE,EAAAI,KAAvCL,EAAOD,EAAPC,QACRV,EAAkBU,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE3Bf,EAAQe,EAAAK,IAAQ,QAEI,OAFJL,EAAAC,KAAA,GAEhBpB,GAAa,GAAOmB,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,wBAEvB,kBAVsB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAWvBhB,GACF,GAAG,KAGDiB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACH/B,IAAagC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAChB3B,IACC4B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oEAELC,EAAAA,EAAAA,KAAA,MAAAD,SACGvB,EAAeyB,OAAS,GACvBzB,EAAe0B,KAAI,SAACC,EAAeC,GACjC,IAAQC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,GAETC,EADgB,kCADaJ,EAAhBK,YAGnB,OACER,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMnC,GAAWqB,SAAA,CAClDQ,IAAUP,EAAAA,EAAAA,KAAA,OAAKc,IAAKP,EAAQQ,IAAKV,IACjCA,MAHID,EAOb,QAIV,C","sources":["pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { fetchTrendingMovies } from 'components/Api';\n\nexport default function HomePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchTrendingMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && (\n        <p>Oops, something went wrong... Please, try reloading this page!</p>\n      )}\n      <ul>\n        {trendingMovies.length > 0 &&\n          trendingMovies.map((trendingMovie, index) => {\n            const { title, id, poster_path } = trendingMovie;\n            const posterBaseURL = 'https://image.tmdb.org/t/p/w200';\n            const poster = posterBaseURL + poster_path;\n            return (\n              <li key={index}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {poster && <img src={poster} alt={title} />}\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchTrendingM","results","_context","prev","next","fetchTrendingMovies","sent","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","length","map","trendingMovie","index","title","id","poster","poster_path","Link","to","concat","state","from","src","alt"],"sourceRoot":""}