{"version":3,"file":"static/js/797.0264de2d.chunk.js","mappings":"uQAIe,SAASA,IAAc,IAADC,EACnCC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAExBG,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAiC,QAAtBpB,EAAGkB,EAAOG,IAAI,gBAAQ,IAAArB,EAAAA,EAAI,GAErCsB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAnB5B,GAAa,GAAM0B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAkBf,GAAa,KAAD,EAAAU,EAAAE,EAAAI,KAAhDL,EAAOD,EAAPC,QACRjB,EAAUiB,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBtB,EAAQsB,EAAAK,IAAQ,QAEI,OAFJL,EAAAC,KAAA,GAEhB3B,GAAa,GAAO0B,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,wBAEvB,kBAVc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAWfhB,GACF,GAAG,CAACL,IASJ,OACEsB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SATO,SAAAC,GACfA,EAAIC,iBACJ,IAAMC,EAAgBF,EAAIG,OAAOC,SAASC,MAAMC,MAChDhC,EAAU,CAAE+B,MAAOH,IACnBF,EAAIG,OAAOI,OACb,EAI6BT,SAAA,EACvBU,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEdL,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQZ,SAAC,eAGxBD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGtC,IAAagD,EAAAA,EAAAA,KAAA,KAAAV,SAAG,eAChBlC,IAAS4C,EAAAA,EAAAA,KAAA,KAAAV,SAAG,kCACZ9B,EAAO8C,OAAS,GACf9C,EAAO+C,KAAI,SAAAV,GACT,IAAQW,EAA2BX,EAA3BW,MAAOC,EAAoBZ,EAApBY,GAETC,EADgB,kCADab,EAAhBc,YAGnB,OACEX,EAAAA,EAAAA,KAAA,MAAAV,UACED,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAM/C,GAAWqB,SAAA,CAClDoB,IAAUV,EAAAA,EAAAA,KAAA,OAAKiB,IAAKP,EAAQQ,IAAKV,KAClCR,EAAAA,EAAAA,KAAA,MAAAV,SAAKkB,QAHAC,EAOb,IACiB,IAAlBjD,EAAO8C,QAAgBvC,IAAgBf,IACtCqC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,6BAA2BvB,EAAY,0BAKpD,C","sources":["pages/MoviesPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'components/Api';\n\nexport default function MoviesPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  const [params, setParams] = useSearchParams();\n  const searchMovie = params.get('movie') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchSearchMovies(searchMovie);\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [searchMovie]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const searchedValue = evt.target.elements.movie.value;\n    setParams({ movie: searchedValue });\n    evt.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"movie\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>Oops, something went wrong...</p>}\n        {movies.length > 0 &&\n          movies.map(movie => {\n            const { title, id, poster_path } = movie;\n            const posterBaseURL = 'https://image.tmdb.org/t/p/w200';\n            const poster = posterBaseURL + poster_path;\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {poster && <img src={poster} alt={title} />}\n                  <h3>{title}</h3>\n                </Link>\n              </li>\n            );\n          })}\n        {movies.length === 0 && searchMovie && !isLoading && (\n          <p>Sorry, we don't find this {searchMovie} in our library</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"names":["MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchMovie","get","location","useLocation","useEffect","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchSearchMov","results","_context","prev","next","fetchSearchMovies","sent","t0","finish","stop","apply","arguments","_jsxs","children","onSubmit","evt","preventDefault","searchedValue","target","elements","movie","value","reset","_jsx","name","type","autoComplete","autoFocus","placeholder","length","map","title","id","poster","poster_path","Link","to","concat","state","from","src","alt"],"sourceRoot":""}